/*! uppie | (c) 2015 silverwind | BSD license */
!function(m){if("object"==typeof exports&&"object"==typeof module)module.exports=m();else{if("function"==typeof define&&define.amd)return define([],m);this.Uppie=m()}}(function(){"use strict";function newDirectoryApi(input,opts,cb){var fd=new FormData,files=[],iterate=function(entries,path,resolve){var promises=[];entries.forEach(function(entry){promises.push(new Promise(function(resolve){if(gfd in entry)entry.getFilesAndDirectories().then(function(entries){if(opts.empty&&!entries.length){var p=(path+entry.name+"/").replace(/^\//,"");fd.append(entry.name+"/",new Blob,p),files.push(p)}iterate(entries,entry.path+entry.name+"/",resolve)});else{if(entry.name){var p=(path+entry.name).replace(/^\//,"");fd.append(entry.name,entry,p),files.push(p)}resolve()}}))}),Promise.all(promises).then(resolve.bind())};input.getFilesAndDirectories().then(function(entries){new Promise(function(resolve){iterate(entries,"/",resolve)}).then(cb.bind(null,fd,files))})}function oldDirectoryApi(input,opts,cb){var fd=new FormData,files=[];[].slice.call(input.files).forEach(function(file){fd.append(file.name,file,file.webkitRelativePath),files.push(file.webkitRelativePath)}),cb(fd,files)}function multipleApi(input,cb){var fd=new FormData,files=[];[].slice.call(input.files).forEach(function(file){fd.append(file.name,file,file.name),files.push(file.name)}),cb(fd,files)}function oldDropApi(items,opts,cb){function readEntries(entry,reader,oldEntries,cb){var dirReader=reader||entry.createReader();dirReader.readEntries(function(entries){var newEntries=oldEntries?oldEntries.concat(entries):entries;entries.length?setTimeout(readEntries.bind(null,entry,dirReader,newEntries,cb),0):cb(newEntries)})}function readDirectory(entry,path,resolve){path||(path=entry.name),readEntries(entry,void 0,void 0,function(entries){var promises=[];entries.forEach(function(entry){promises.push(new Promise(function(resolve){entry.isFile?entry.file(function(file){fd.append(file.name,file,path+"/"+file.name),files.push(path+"/"+file.name),resolve()},resolve.bind()):readDirectory(entry,path+"/"+entry.name,resolve)}))}),opts.empty&&!entries.length&&(fd.append(entry.name+"/",new Blob,path+"/"+entry.name+"/"),files.push(path+"/"+entry.name+"/")),Promise.all(promises).then(resolve.bind())})}var fd=new FormData,files=[],rootPromises=[];[].slice.call(items).forEach(function(entry){entry=entry.webkitGetAsEntry(),entry&&rootPromises.push(new Promise(function(resolve){entry.isFile?entry.file(function(file){fd.append(file.name,file,file.name),files.push(file.name),resolve()},resolve.bind()):entry.isDirectory&&readDirectory(entry,null,resolve)}))}),Promise.all(rootPromises).then(cb.bind(null,fd,files))}var gfd="getFilesAndDirectories";return function(opts){return function(node,cb){if("INPUT"===node.tagName&&"file"===node.type)node.addEventListener("change",function(event){event.target.files&&event.target.files.length&&(gfd in event.target?newDirectoryApi(event.target,opts,cb):"webkitRelativePath"in event.target.files[0]?oldDirectoryApi(event.target,opts,cb):multipleApi(event.target,cb))});else{var stop=function(event){event.preventDefault()};node.addEventListener("dragover",stop),node.addEventListener("dragenter",stop),node.addEventListener("drop",function(event){event.preventDefault(),gfd in event.dataTransfer?newDirectoryApi(event.dataTransfer,opts,cb):"webkitdirectory"in document.createElement("input")&&oldDropApi(event.dataTransfer.items,opts,cb)})}}}});